{
  "swagger": "2.0",
  "info": {
    "title": "Health & Nutrition API",
    "description": "API for health and nutrition management.",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "schemes": [
    "http"
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Login to get JWT token",
        "description": "Log in to access your account. Provide your username and password to receive a JWT token that will grant you access to the system and allow you to make authenticated requests.",
        "parameters": [
          {
            "name": "loginData",
            "in": "body",
            "description": "Your login details, including your username and password, to access your account.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Username for login",
                  "default":"username"
                },
                "password": {
                  "type": "string",
                  "description": "Password for login",
                  "default":"password"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": "The JWT token"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Create a new user account",
        "description": "Sign up to create a new account by providing a unique username and a secure password. After registering, youâ€™ll be able to log in and access the platform with your credentials.",
        "parameters": [
          {
            "name": "registerData",
            "in": "body",
            "description": "Information needed to create a new account, including your username and password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "The username you would like to use for your account",
                  "default":"username"
                },
                "password": {
                  "type": "string",
                  "description": "The password you would like to use for your account",
                  "default":"password"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Unable to process your request: Either the input is invalid or the username already exists. Please check and try again."
          }
        }
      }
    },
    "/participants": {
      "get": {
        "summary": "Get all participants",
        "responses": {
          "200": {
            "description": "List of participants"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add a new participant",
        "parameters": [
          {
            "name": "participant",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {"type": "string", "default": "Name Surname"},
                "age": {"type": "integer", "default":20},
                "gender": {"type": "string", "enum": ["Male", "Female"], "default":"Gender"},
                "phone": {"type": "string", "default": "phone"}
              }
            }
          }
        ],
        "responses": {
          "200": {"description": "Participant added"},
          "400": {"description": "Bad request: Invalid input"}
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/participants/{participant_id}": {
      "get": {
        "summary": "Get participant by ID",
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {"description": "Participant details"},
          "404": {"description": "Participant not found"},
          "400": { "description": "Cannot delete participant due to dependencies"},
          "500": {"description": "Internal server error"}
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update participant details by ID",
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "participant",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {"type": "string", "default":"Name Surname"},
                "age": {"type": "integer", "default": 20},
                "gender": {"type": "string", "default":"Gender"},
                "phone": {"type": "string", "default": "Phone"}
              }
            }
          }
        ],
        "responses": {
          "200": {"description": "Participant updated successfully"},
          "404": {"description": "Participant not found"},
          "500": {"description": "Server error"}
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a participant by ID",
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {"description": "Participant deleted successfully"},
          "400": {"description": "Cannot delete due to dependencies"},
          "404": {"description": "Participant not found"},
          "500": {"description": "Server error"}
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/food-recommendations": {
      "get": {
        "summary": "A specific food was recommended to users who engage in a particular sport",
        "parameters": [
          {
            "name": "food_name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Food name to filter recommendations"
          }
        ],
        "responses": {
          "200": {
            "description": "List of participants recommended the specified food",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "participant_name": {"type": "string"},
                  "food_name": {"type": "string"},
                  "activity_name": {"type": "string"}
                }
              }
            }
          },
          "400": {
            "description": "Food name is required"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/caloric-balance": {
      "get": {
        "summary": "Caloric Information for All Participants",
        "responses": {
          "200": {"description": "Caloric balance details"},
          "500": {"description": "Server error"}
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/top-weight-loss": {
      "get": {
        "summary": "Get top 5 participants with the highest average daily weight loss",
        "responses": {
          "200": {
            "description": "Top weight loss participants with average daily loss",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "days_taken": {"type": "integer"},
                  "weight_loss": {"type": "number"},
                  "avg_daily_loss": {"type": "number"}
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/active-participants": {
      "get": {
        "summary": "Get most active participants by calories burned",
        "responses": {
          "200": {"description": "Active participants details"},
          "500": {"description": "Server error"}
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/top-recommendations": {
      "get": {
        "summary": "Get most recommended foods and activities",
        "responses": {
          "200": {"description": "Top recommendations details"},
          "500": {"description": "Server error"}
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/caloric-report": {
      "get": {
        "summary": "Get caloric report with balance for a participant",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Name of the participant"
          }
        ],
        "responses": {
          "200": {
            "description": "Caloric report with balance details",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "total_burned_calories": {"type": "number"},
                  "total_consumed_calories": {"type": "number"},
                  "calorie_balance": {"type": "number"},
                  "status": {"type": "string"}
                }
              }
            }
          },
          "400": {
            "description": "Bad request: Invalid input"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Enter 'Bearer <your-token>'"
    }
  }
}

